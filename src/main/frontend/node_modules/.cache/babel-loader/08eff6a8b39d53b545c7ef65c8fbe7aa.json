{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/TileQueue\n */\n\n\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nvar TileQueue =\n/** @class */\nfunction (_super) {\n  __extends(TileQueue, _super);\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n\n\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n    var _this = _super.call(this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function (element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function (element) {\n      return (\n        /** @type {import(\"./Tile.js\").default} */\n        element[0].getKey()\n      );\n    }) || this;\n    /** @private */\n\n\n    _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n\n    _this.tileChangeCallback_ = tileChangeCallback;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.tilesLoading_ = 0;\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n\n    _this.tilesLoadingKeys_ = {};\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  TileQueue.prototype.enqueue = function (element) {\n    var added = _super.prototype.enqueue.call(this, element);\n\n    if (added) {\n      var tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n\n    return added;\n  };\n  /**\n   * @return {number} Number of tiles loading.\n   */\n\n\n  TileQueue.prototype.getTilesLoading = function () {\n    return this.tilesLoading_;\n  };\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n\n\n  TileQueue.prototype.handleTileChange = function (event) {\n    var tile =\n    /** @type {import(\"./Tile.js\").default} */\n    event.target;\n    var state = tile.getState();\n\n    if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      var tileKey = tile.getKey();\n\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n\n      this.tileChangeCallback_();\n    }\n  };\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n\n\n  TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var state, tile, tileKey;\n\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads && this.getCount() > 0) {\n      tile =\n      /** @type {import(\"./Tile.js\").default} */\n      this.dequeue()[0];\n      tileKey = tile.getKey();\n      state = tile.getState();\n\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue);\n\nexport default TileQueue;","map":{"version":3,"sources":["src/TileQueue.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map"]},"metadata":{},"sourceType":"module"}