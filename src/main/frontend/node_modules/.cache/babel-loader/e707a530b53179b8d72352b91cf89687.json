{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/GPX\n */\n\n\nimport Feature from '../Feature.js';\nimport { includes } from '../array.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\n\nvar NAMESPACE_URIS = [null, 'http://www.topografix.com/GPX/1/0', 'http://www.topografix.com/GPX/1/1'];\n/**\n * @const\n * @type {string}\n */\n\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' + 'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\n\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType')\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\n\nvar GPX =\n/** @class */\nfunction (_super) {\n  __extends(GPX, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n\n\n  function GPX(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n    /**\n     * @inheritDoc\n     */\n\n    _this.dataProjection = getProjection('EPSG:4326');\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n\n    _this.readExtensions_ = options.readExtensions;\n    return _this;\n  }\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n\n\n  GPX.prototype.handleReadExtensions_ = function (features) {\n    if (!features) {\n      features = [];\n    }\n\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n\n      if (this.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n\n    var featureReader = FEATURE_READER[node.localName];\n\n    if (!featureReader) {\n      return null;\n    }\n\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n\n    if (!feature) {\n      return null;\n    }\n\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\n\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n\n    return [];\n  };\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n\n\n  GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options); //FIXME Serialize metadata\n\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    {\n      node: gpx\n    }, GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readNonNegativeInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */\n\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src', 'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop', 'ageofdgpsdata', 'dgpsid']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\n\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\n\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry =\n  /** @type {Feature} */\n  value.getGeometry();\n\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\n\n\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n\n  if ('ele' in values) {\n    flatCoordinates.push(\n    /** @type {number} */\n    values['ele']);\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n\n  if ('time' in values) {\n    flatCoordinates.push(\n    /** @type {number} */\n    values['time']);\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n\n  return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\n\n\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n\n    if (ends) {\n      for (var i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n\n  return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseLink(node, objectStack) {\n  var values =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var href = node.getAttribute('href');\n\n  if (href !== null) {\n    values['link'] = href;\n  }\n\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseExtensions(node, objectStack) {\n  var values =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n\n  if (values) {\n    var rteValues =\n    /** @type {!Object} */\n    objectStack[objectStack.length - 1];\n    var flatCoordinates =\n    /** @type {Array<number>} */\n    rteValues['flatCoordinates'];\n    var layoutOptions =\n    /** @type {LayoutOptions} */\n    rteValues['layoutOptions'];\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n\n  if (values) {\n    var trkValues =\n    /** @type {!Object} */\n    objectStack[objectStack.length - 1];\n    var flatCoordinates =\n    /** @type {Array<number>} */\n    trkValues['flatCoordinates'];\n    var layoutOptions =\n    /** @type {LayoutOptions} */\n    trkValues['layoutOptions'];\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseTrkSeg(node, objectStack) {\n  var values =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates =\n  /** @type {Array<number>} */\n  values['flatCoordinates'];\n  var ends =\n  /** @type {Array<number>} */\n  values['ends'];\n  ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\n\n\nfunction readRte(node, objectStack) {\n  var options =\n  /** @type {import(\"./Feature.js\").ReadOptions} */\n  objectStack[0];\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n\n  if (!values) {\n    return undefined;\n  }\n\n  var flatCoordinates =\n  /** @type {Array<number>} */\n  values['flatCoordinates'];\n  delete values['flatCoordinates'];\n  var layoutOptions =\n  /** @type {LayoutOptions} */\n  values['layoutOptions'];\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\n\n\nfunction readTrk(node, objectStack) {\n  var options =\n  /** @type {import(\"./Feature.js\").ReadOptions} */\n  objectStack[0];\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n\n  if (!values) {\n    return undefined;\n  }\n\n  var flatCoordinates =\n  /** @type {Array<number>} */\n  values['flatCoordinates'];\n  delete values['flatCoordinates'];\n  var ends =\n  /** @type {Array<number>} */\n  values['ends'];\n  delete values['ends'];\n  var layoutOptions =\n  /** @type {LayoutOptions} */\n  values['layoutOptions'];\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\n\n\nfunction readWpt(node, objectStack) {\n  var options =\n  /** @type {import(\"./Feature.js\").ReadOptions} */\n  objectStack[0];\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n\n  if (!values) {\n    return undefined;\n  }\n\n  var layoutOptions =\n  /** @type {LayoutOptions} */\n  {};\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  {\n    node: node\n  }, LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties']; //FIXME Projection handling\n\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  var geometryLayout = context['geometryLayout'];\n\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n\n    // fall through\n\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n\n      break;\n\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n\n      break;\n\n    default: // pass\n\n  }\n\n  var orderedKeys = node.nodeName == 'rtept' ? RTEPT_TYPE_SEQUENCE[namespaceURI] : WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  {\n    node: node,\n    'properties': properties\n  }, WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeRte(node, feature, objectStack) {\n  var options =\n  /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  var properties = feature.getProperties();\n  var context = {\n    node: node\n  };\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    var lineString =\n    /** @type {LineString} */\n    transformGeometryWithOptions(geometry, true, options);\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeTrk(node, feature, objectStack) {\n  var options =\n  /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  var properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n\n  var context = {\n    node: node\n  };\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    var multiLineString =\n    /** @type {MultiLineString} */\n    transformGeometryWithOptions(geometry, true, options);\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {\n    node: node\n  };\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeWpt(node, feature, objectStack) {\n  var options =\n  /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n\n  if (geometry.getType() == GeometryType.POINT) {\n    var point =\n    /** @type {Point} */\n    transformGeometryWithOptions(geometry, true, options);\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;","map":{"version":3,"sources":["../src/format/GPX.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport { includes } from '../array.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.topografix.com/GPX/1/0',\n    'http://www.topografix.com/GPX/1/1'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n    'rte': readRte,\n    'trk': readTrk,\n    'wpt': readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /** @class */ (function (_super) {\n    __extends(GPX, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GPX(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @type {function(Feature, Node): void|undefined}\n         * @private\n         */\n        _this.readExtensions_ = options.readExtensions;\n        return _this;\n    }\n    /**\n     * @param {Array<Feature>} features List of features.\n     * @private\n     */\n    GPX.prototype.handleReadExtensions_ = function (features) {\n        if (!features) {\n            features = [];\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            var feature = features[i];\n            if (this.readExtensions_) {\n                var extensionsNode = feature.get('extensionsNode_') || null;\n                this.readExtensions_(feature, extensionsNode);\n            }\n            feature.set('extensionsNode_', undefined);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var featureReader = FEATURE_READER[node.localName];\n        if (!featureReader) {\n            return null;\n        }\n        var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n        if (!feature) {\n            return null;\n        }\n        this.handleReadExtensions_([feature]);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        if (node.localName == 'gpx') {\n            /** @type {Array<Feature>} */\n            var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                this.handleReadExtensions_(features);\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        return [];\n    };\n    /**\n     * Encode an array of features in the GPX format as an XML node.\n     * LineString geometries are output as routes (`<rte>`), and MultiLineString\n     * as tracks (`<trk>`).\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        //FIXME Serialize metadata\n        var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        gpx.setAttribute('version', '1.1');\n        gpx.setAttribute('creator', 'OpenLayers');\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: gpx }), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n        return gpx;\n    };\n    return GPX;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time'\n]);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'wpt',\n    'LineString': 'rte',\n    'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n    var geometry = /** @type {Feature} */ (value).getGeometry();\n    if (geometry) {\n        var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n        if (nodeName) {\n            var parentNode = objectStack[objectStack.length - 1].node;\n            return createElementNS(parentNode.namespaceURI, nodeName);\n        }\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n    if ('ele' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['ele']));\n        delete values['ele'];\n        layoutOptions.hasZ = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    if ('time' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['time']));\n        delete values['time'];\n        layoutOptions.hasM = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n    var layout = GeometryLayout.XY;\n    var stride = 2;\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\n        layout = GeometryLayout.XYZM;\n        stride = 4;\n    }\n    else if (layoutOptions.hasZ) {\n        layout = GeometryLayout.XYZ;\n        stride = 3;\n    }\n    else if (layoutOptions.hasM) {\n        layout = GeometryLayout.XYM;\n        stride = 3;\n    }\n    if (stride !== 4) {\n        for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n            if (layoutOptions.hasZ) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n            }\n            if (layoutOptions.hasM) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n            }\n        }\n        flatCoordinates.length = flatCoordinates.length / 4 * stride;\n        if (ends) {\n            for (var i = 0, ii = ends.length; i < ii; i++) {\n                ends[i] = ends[i] / 4 * stride;\n            }\n        }\n    }\n    return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var href = node.getAttribute('href');\n    if (href !== null) {\n        values['link'] = href;\n    }\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n    var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n    if (values) {\n        var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n    var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n    if (values) {\n        var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    parseNode(TRKSEG_PARSERS, node, objectStack);\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'layoutOptions': {}\n    }, RTE_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n    var geometry = new LineString(flatCoordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'ends': [],\n        'layoutOptions': {}\n    }, TRK_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    delete values['ends'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n    var geometry = new MultiLineString(flatCoordinates, layout, ends);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var layoutOptions = /** @type {LayoutOptions} */ ({});\n    var coordinates = appendCoordinate([], layoutOptions, node, values);\n    var layout = applyLayoutOptions(layoutOptions, coordinates);\n    var geometry = new Point(coordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n    node.setAttribute('href', value);\n    var context = objectStack[objectStack.length - 1];\n    var properties = context['properties'];\n    var link = [\n        properties['linkText'],\n        properties['linkType']\n    ];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var namespaceURI = parentNode.namespaceURI;\n    var properties = context['properties'];\n    //FIXME Projection handling\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\n    var geometryLayout = context['geometryLayout'];\n    switch (geometryLayout) {\n        case GeometryLayout.XYZM:\n            if (coordinate[3] !== 0) {\n                properties['time'] = coordinate[3];\n            }\n        // fall through\n        case GeometryLayout.XYZ:\n            if (coordinate[2] !== 0) {\n                properties['ele'] = coordinate[2];\n            }\n            break;\n        case GeometryLayout.XYM:\n            if (coordinate[2] !== 0) {\n                properties['time'] = coordinate[2];\n            }\n            break;\n        default:\n        // pass\n    }\n    var orderedKeys = (node.nodeName == 'rtept') ?\n        RTEPT_TYPE_SEQUENCE[namespaceURI] :\n        WPT_TYPE_SEQUENCE[namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node, 'properties': properties }), WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.LINE_STRING) {\n        var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = lineString.getLayout();\n        properties['rtept'] = lineString.getCoordinates();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n        var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\n        properties['trkseg'] = multiLineString.getLineStrings();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['geometryLayout'] = lineString.getLayout();\n    context['properties'] = {};\n    pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var context = objectStack[objectStack.length - 1];\n    context['properties'] = feature.getProperties();\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.POINT) {\n        var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = point.getLayout();\n        writeWptType(node, point.getCoordinates(), objectStack);\n    }\n}\nexport default GPX;\n//# sourceMappingURL=GPX.js.map"]},"metadata":{},"sourceType":"module"}