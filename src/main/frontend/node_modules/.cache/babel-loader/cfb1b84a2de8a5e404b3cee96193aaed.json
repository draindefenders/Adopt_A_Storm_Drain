{"ast":null,"code":"/**\n * @module ol/style/IconImage\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { createCanvasContext2D } from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n\nvar IconImage =\n/** @class */\nfunction (_super) {\n  __extends(IconImage, _super);\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n\n\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n\n    _this.hitDetectionImage_ = null;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    _this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n\n    _this.canvas_ = color ? document.createElement('canvas') : null;\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n\n    _this.color_ = color;\n    /**\n     * @private\n     * @type {?function():void}\n     */\n\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n\n    _this.imageState_ = imageState;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    _this.size_ = size;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n\n    _this.src_ = src;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n\n    _this.tainted_;\n    return _this;\n  }\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n\n\n  IconImage.prototype.isTainted_ = function () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n\n    return this.tainted_ === true;\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.dispatchChangeEvent_ = function () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.handleImageError_ = function () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.handleImageLoad_ = function () {\n    this.imageState_ = ImageState.LOADED;\n\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n\n\n  IconImage.prototype.getImage = function (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  IconImage.prototype.getImageState = function () {\n    return this.imageState_;\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n\n\n  IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n\n    return this.hitDetectionImage_;\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  IconImage.prototype.getSize = function () {\n    return this.size_;\n  };\n  /**\n   * @return {string|undefined} Image src.\n   */\n\n\n  IconImage.prototype.getSrc = function () {\n    return this.src_;\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  IconImage.prototype.load = function () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n\n      try {\n        /** @type {HTMLImageElement} */\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.replaceColor_ = function () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n\n    ctx.putImageData(imgData, 0, 0);\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  IconImage.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n\n  return IconImage;\n}(EventTarget);\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\n\n\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n\n  return iconImage;\n}\nexport default IconImage;","map":{"version":3,"sources":["../src/style/IconImage.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map"]},"metadata":{},"sourceType":"module"}