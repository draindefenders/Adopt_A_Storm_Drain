{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/KML\n */\n\n\nimport Feature from '../Feature.js';\nimport { extend, includes } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { toRadians } from '../math.js';\nimport { get as getProjection } from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\n\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\n\nvar NAMESPACE_URIS = [null, 'http://earth.google.com/kml/2.0', 'http://earth.google.com/kml/2.1', 'http://earth.google.com/kml/2.2', 'http://www.opengis.net/kml/2.2'];\n/**\n * @const\n * @type {string}\n */\n\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' + 'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\n\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n  'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n  'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n  'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n  'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n  'Style': makeObjectPropertySetter(readStyle),\n  'StyleMap': placemarkStyleMapParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readURI),\n  'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n  'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\n\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\n\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\n\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {IconAnchorUnits}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {IconAnchorUnits}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\n\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\n\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\n\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\n\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\n\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\n\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\n\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\n\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\n\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\n\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\n\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\n\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\n\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\n\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\n\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n  DEFAULT_IMAGE_STYLE_SRC = 'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\n\n\nvar TEXTAREA;\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\n\nvar KML =\n/** @class */\nfunction (_super) {\n  __extends(KML, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n\n\n  function KML(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    _this.dataProjection = getProjection('EPSG:4326');\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n\n    _this.defaultStyle_ = options.defaultStyle ? options.defaultStyle : DEFAULT_STYLE_ARRAY;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.extractStyles_ = options.extractStyles !== undefined ? options.extractStyles : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.writeStyles_ = options.writeStyles !== undefined ? options.writeStyles : true;\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n\n    _this.sharedStyles_ = {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.showPointNames_ = options.showPointNames !== undefined ? options.showPointNames : true;\n    /**\n     * @private\n     * @type {null|string}\n     */\n\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n    return _this;\n  }\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n\n\n  KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n    // FIXME use scope somehow\n    var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n\n\n  KML.prototype.readPlacemark_ = function (node, objectStack) {\n    var object = pushParseAndPop({\n      'geometry': null\n    }, PLACEMARK_PARSERS, node, objectStack, this);\n\n    if (!object) {\n      return undefined;\n    }\n\n    var feature = new Feature();\n    var id = node.getAttribute('id');\n\n    if (id !== null) {\n      feature.setId(id);\n    }\n\n    var options =\n    /** @type {import(\"./Feature.js\").ReadOptions} */\n    objectStack[0];\n    var geometry = object['geometry'];\n\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      var style = object['Style'];\n      var styleUrl = object['styleUrl'];\n      var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n\n    delete object['Style']; // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n    return feature;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n\n\n  KML.prototype.readSharedStyle_ = function (node, objectStack) {\n    var id = node.getAttribute('id');\n\n    if (id !== null) {\n      var style = readStyle.call(this, node, objectStack);\n\n      if (style) {\n        var styleUri = void 0;\n        var baseURI = node.baseURI;\n\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n\n        if (baseURI) {\n          var url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n\n\n  KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n    var id = node.getAttribute('id');\n\n    if (id === null) {\n      return;\n    }\n\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n\n    if (!styleMapValue) {\n      return;\n    }\n\n    var styleUri;\n    var baseURI = node.baseURI;\n\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n\n    if (baseURI) {\n      var url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n\n    this.sharedStyles_[styleUri] = styleMapValue;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  KML.prototype.readFeatureFromNode = function (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n\n    var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n\n    var features;\n    var localName = node.localName;\n\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var fs = this.readFeaturesFromNode(n, opt_options);\n\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n\n      return features;\n    } else {\n      return [];\n    }\n  };\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n\n\n  KML.prototype.readName = function (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(\n      /** @type {Document} */\n      source);\n    } else {\n      return this.readNameFromNode(\n      /** @type {Element} */\n      source);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n\n\n  KML.prototype.readNameFromDocument = function (doc) {\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        var name_1 = this.readNameFromNode(\n        /** @type {Element} */\n        n);\n\n        if (name_1) {\n          return name_1;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n\n\n  KML.prototype.readNameFromNode = function (node) {\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var localName = n.localName;\n\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'Placemark' || localName == 'kml')) {\n        var name_2 = this.readNameFromNode(n);\n\n        if (name_2) {\n          return name_2;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n\n\n  KML.prototype.readNetworkLinks = function (source) {\n    var networkLinks = [];\n\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */\n      source));\n    } else {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Element} */\n      source));\n    }\n\n    return networkLinks;\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n\n\n  KML.prototype.readNetworkLinksFromDocument = function (doc) {\n    var networkLinks = [];\n\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Element} */\n        n));\n      }\n    }\n\n    return networkLinks;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n\n\n  KML.prototype.readNetworkLinksFromNode = function (node) {\n    var networkLinks = [];\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'NetworkLink') {\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var localName = n.localName;\n\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n\n    return networkLinks;\n  };\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n\n\n  KML.prototype.readRegion = function (source) {\n    var regions = [];\n\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */\n      source));\n    } else {\n      extend(regions, this.readRegionFromNode(\n      /** @type {Element} */\n      source));\n    }\n\n    return regions;\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n\n\n  KML.prototype.readRegionFromDocument = function (doc) {\n    var regions = [];\n\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(\n        /** @type {Element} */\n        n));\n      }\n    }\n\n    return regions;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n\n\n  KML.prototype.readRegionFromNode = function (node) {\n    var regions = [];\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var localName = n.localName;\n\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n\n    return regions;\n  };\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n\n\n  KML.prototype.writeFeaturesNode = function (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    var\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    context = {\n      node: kml\n    };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n\n    var properties = {};\n\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n    return kml;\n  };\n\n  return KML;\n}(XMLFeature);\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\n\n\nfunction createNameStyleFunction(foundStyle, name) {\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  var imageStyle = foundStyle.getImage();\n\n  if (imageStyle) {\n    var imageSize = imageStyle.getImageSize();\n\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    if (imageSize.length == 2) {\n      var imageScale = imageStyle.getScale(); // Offset the label to be centered to the right of the icon,\n      // if there is one.\n\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n\n  var textStyle = foundStyle.getText();\n\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n  var nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n    // although nameStyle will be used only for Point geometries\n    // fill and stroke are included to assist writing of MultiGeometry styles\n    fill: foundStyle.getFill(),\n    stroke: foundStyle.getStroke()\n  });\n  return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\n\n\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      var drawName = showPointNames;\n      var name = '';\n      var multiGeometryPoints = [];\n\n      if (drawName) {\n        var geometry = feature.getGeometry();\n\n        if (geometry) {\n          var type = geometry.getType();\n\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry.getGeometriesArray().filter(function (geometry) {\n              var type = geometry.getType();\n              return type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n            });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName = type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name =\n        /** @type {string} */\n        feature.get('name');\n        drawName = drawName && !!name; // convert any html character codes\n\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      var featureStyle = defaultStyle;\n\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n\n      if (drawName) {\n        var nameStyle = createNameStyleFunction(featureStyle[0], name);\n\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          var baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n\n        return nameStyle;\n      }\n\n      return featureStyle;\n    }\n  );\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\n\n\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && '#' + styleValue in sharedStyles) {\n      styleValue = '#' + styleValue;\n    }\n\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\n\n\nfunction readColor(node) {\n  var s = getAllTextContent(node, false); // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n\n  if (m) {\n    var hexColor = m[1];\n    return [parseInt(hexColor.substr(6, 2), 16), parseInt(hexColor.substr(4, 2), 16), parseInt(hexColor.substr(2, 2), 16), parseInt(hexColor.substr(0, 2), 16) / 255];\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\n\n\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = []; // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n\n  var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n\n  while (m = re.exec(s)) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n\n  if (s !== '') {\n    return undefined;\n  }\n\n  return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\n\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\n\n\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\n\n\nfunction readScale(node) {\n  return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\n\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  var src;\n  var href =\n  /** @type {string|undefined} */\n  IconObject['href'];\n\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot =\n  /** @type {Vec2|undefined} */\n  object['hotSpot'];\n\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x =\n  /** @type {number|undefined} */\n  IconObject['x'];\n  var y =\n  /** @type {number|undefined} */\n  IconObject['y'];\n\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w =\n  /** @type {number|undefined} */\n  IconObject['w'];\n  var h =\n  /** @type {number|undefined} */\n  IconObject['h'];\n\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading =\n  /** @type {number} */\n  object['heading'];\n\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale =\n  /** @type {number|undefined} */\n  object['scale'];\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    var imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color:\n      /** @type {import(\"../color.js\").Color} */\n      'color' in object ? object['color'] : DEFAULT_COLOR\n    }),\n    scale:\n    /** @type {number|undefined} */\n    object['scale']\n  });\n  styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color:\n    /** @type {import(\"../color.js\").Color} */\n    'color' in object ? object['color'] : DEFAULT_COLOR,\n    width:\n    /** @type {number} */\n    'width' in object ? object['width'] : 1\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color:\n    /** @type {import(\"../color.js\").Color} */\n    'color' in object ? object['color'] : DEFAULT_COLOR\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill =\n  /** @type {boolean|undefined} */\n  object['fill'];\n\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n\n  var outline =\n  /** @type {boolean|undefined} */\n  object['outline'];\n\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\n\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject =\n  /** @type {GxTrackObject} */\n  objectStack[objectStack.length - 1];\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = getAllTextContent(node, false);\n  var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\n\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n\n  if (!lineStrings) {\n    return undefined;\n  }\n\n  return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\n\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop(\n  /** @type {GxTrackObject} */\n  {\n    flatCoordinates: [],\n    whens: []\n  }, GX_TRACK_PARSERS, node, objectStack);\n\n  if (!gxTrackObject) {\n    return undefined;\n  }\n\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'x': makeObjectPropertySetter(readDecimal),\n  'y': makeObjectPropertySetter(readDecimal),\n  'w': makeObjectPropertySetter(readDecimal),\n  'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\n\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\n\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\n\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\n\n\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\n\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n\n  if (!geometries) {\n    return null;\n  }\n\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n\n  if (homogeneous) {\n    var layout = void 0;\n    var flatCoordinates = void 0;\n\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n\n      for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    multiGeometry\n  );\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\n\n\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\n\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop(\n  /** @type {Object<string,*>} */\n  {}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\n\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n\n  if (!styleObject) {\n    return null;\n  }\n\n  var fillStyle =\n  /** @type {Fill} */\n  'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE;\n  var fill =\n  /** @type {boolean|undefined} */\n  styleObject['fill'];\n\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n\n  var imageStyle;\n\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n\n  var textStyle =\n  /** @type {Text} */\n  'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE;\n  var strokeStyle =\n  /** @type {Stroke} */\n  'strokeStyle' in styleObject ? styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE;\n  var outline =\n  /** @type {boolean|undefined} */\n  styleObject['outline'];\n\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [new Style({\n      geometry: function (feature) {\n        var geometry = feature.getGeometry();\n        var type = geometry.getType();\n\n        if (type === GeometryType.GEOMETRY_COLLECTION) {\n          return new GeometryCollection(geometry.getGeometriesArray().filter(function (geometry) {\n            var type = geometry.getType();\n            return type !== GeometryType.POLYGON && type !== GeometryType.MULTI_POLYGON;\n          }));\n        } else if (type !== GeometryType.POLYGON && type !== GeometryType.MULTI_POLYGON) {\n          return geometry;\n        }\n      },\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined // FIXME\n\n    }), new Style({\n      geometry: function (feature) {\n        var geometry = feature.getGeometry();\n        var type = geometry.getType();\n\n        if (type === GeometryType.GEOMETRY_COLLECTION) {\n          return new GeometryCollection(geometry.getGeometriesArray().filter(function (geometry) {\n            var type = geometry.getType();\n            return type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON;\n          }));\n        } else if (type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON) {\n          return geometry;\n        }\n      },\n      fill: fillStyle,\n      stroke: null,\n      zIndex: undefined // FIXME\n\n    })];\n  }\n\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n\n  })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\n\n\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      }\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n\n  delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readURI)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n\n  if (!pairObject) {\n    return;\n  }\n\n  var key =\n  /** @type {string|undefined} */\n  pairObject['key'];\n\n  if (key && key == 'normal') {\n    var styleUrl =\n    /** @type {string|undefined} */\n    pairObject['styleUrl'];\n\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n\n    var style =\n    /** @type {Style} */\n    pairObject['Style'];\n\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n\n  if (!styleMapValue) {\n    return;\n  }\n\n  var placemarkObject = objectStack[objectStack.length - 1];\n\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject =\n    /** @type {Object} */\n    objectStack[objectStack.length - 1];\n    featureObject[name] = data;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var regionObject =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var extent = [parseFloat(object['west']), parseFloat(object['south']), parseFloat(object['east']), parseFloat(object['north'])];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var lodObject =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n\n  if (flatLinearRing) {\n    var flatLinearRings =\n    /** @type {Array<Array<number>>} */\n    objectStack[objectStack.length - 1];\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n\n  if (flatLinearRing) {\n    var flatLinearRings =\n    /** @type {Array<Array<number>>} */\n    objectStack[objectStack.length - 1];\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction whenParser(node, objectStack) {\n  var gxTrackObject =\n  /** @type {GxTrackObject} */\n  objectStack[objectStack.length - 1];\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\n\n\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n\n  for (var i = 0; i < 4; ++i) {\n    var hex = Math.floor(\n    /** @type {number} */\n    abgr[i]).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n\n  writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var layout = context['layout'];\n  var stride = context['stride'];\n  var dimension;\n\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var ii = coordinates.length;\n  var text = '';\n\n  if (ii > 0) {\n    text += coordinates[0];\n\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n\n      for (var d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n\n  writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\n\n\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\n\n\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\n\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\n\n\nfunction writeDocument(node, features, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\n\n\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{\n      name: names[i],\n      value: values[i]\n    }], objectStack);\n  }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'x': makeChildAppender(writeDecimalTextNode),\n  'y': makeChildAppender(writeDecimalTextNode),\n  'w': makeChildAppender(writeDecimalTextNode),\n  'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\n\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeIcon(node, icon, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['scale', 'heading', 'Icon', 'hotSpot']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeIconStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var\n  /** @type {Object<string, any>} */\n  properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n\n    var origin_1 = style.getOrigin(); // top-left\n\n    if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n      iconProperties['x'] = origin_1[0];\n      iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var\n      /** @type {Vec2} */\n      hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n  var scale = style.getScale();\n\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'scale']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeLabelStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {};\n  var fill = style.getFill();\n\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n\n  var scale = style.getScale();\n\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeLineStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\n\n\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\n\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    value.getType()]);\n  }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\n\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {\n    node: node\n  };\n  var type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n\n  var geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n\n  var factory;\n\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries =\n    /** @type {GeometryCollection} */\n    geometry.getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries =\n    /** @type {MultiPoint} */\n    geometry.getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n    /** @type {MultiLineString} */\n    geometry.getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n    /** @type {MultiPolygon} */\n    geometry.getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n\n  pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'open', 'visibility', 'address', 'phoneNumber', 'description', 'styleUrl', 'Style']);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\n\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\n\nfunction writePlacemark(node, feature, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  }; // set id\n\n  if (feature.getId()) {\n    node.setAttribute('id',\n    /** @type {string} */\n    feature.getId());\n  } // serialize properties (properties unknown to KML are not serialized)\n\n\n  var properties = feature.getProperties(); // don't export these to ExtendedData\n\n  var filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1\n  };\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function (v) {\n    return !filter[v];\n  });\n  var styleFunction = feature.getStyleFunction();\n\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n\n      var textStyle = style.getText();\n\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {\n      names: keys,\n      values: sequence\n    };\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  } // serialize geometry\n\n\n  var options =\n  /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  var geometry = feature.getGeometry();\n\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['extrude', 'tessellate', 'altitudeMode', 'coordinates']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride(); // serialize properties (properties unknown to KML are not serialized)\n\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  }; // inner rings\n\n  pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack); // outer ring\n\n  pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode)\n});\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePolyStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\n\n\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n\n  if (imageStyle && typeof\n  /** @type {?} */\n  imageStyle.getSrc === 'function') {\n    properties['IconStyle'] = imageStyle;\n  }\n\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\n\n\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;","map":{"version":3,"sources":["../src/format/KML.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport { extend, includes } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { toRadians } from '../math.js';\nimport { get as getProjection } from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n    'http://www.google.com/kml/ext/2.2'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'Document', 'Placemark'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\nvar TEXTAREA;\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle ?\n            options.defaultStyle : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ = options.extractStyles !== undefined ?\n            options.extractStyles : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.writeStyles_ = options.writeStyles !== undefined ?\n            options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ = options.showPointNames !== undefined ?\n            options.showPointNames : true;\n        /**\n         * @private\n         * @type {null|string}\n         */\n        _this.crossOrigin_ = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this)\n        });\n        /** @type {Array<Feature>} */\n        // @ts-ignore\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack, this);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle.call(this, node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: kml };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    var imageStyle = foundStyle.getImage();\n    if (imageStyle) {\n        var imageSize = imageStyle.getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = imageStyle.getScale();\n            // Offset the label to be centered to the right of the icon,\n            // if there is one.\n            textOffset[0] = imageScale * imageSize[0] / 2;\n            textOffset[1] = -imageScale * imageSize[1] / 2;\n            textAlign = 'left';\n        }\n    }\n    var textStyle = foundStyle.getText();\n    if (textStyle) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        textStyle = textStyle.clone();\n        textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        image: imageStyle,\n        text: textStyle,\n        // although nameStyle will be used only for Point geometries\n        // fill and stroke are included to assist writing of MultiGeometry styles\n        fill: foundStyle.getFill(),\n        stroke: foundStyle.getStroke()\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        var name = '';\n        var multiGeometryPoints = [];\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var type = geometry.getType();\n                if (type === GeometryType.GEOMETRY_COLLECTION) {\n                    multiGeometryPoints = geometry.getGeometriesArray().filter(function (geometry) {\n                        var type = geometry.getType();\n                        return type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n                    });\n                    drawName = multiGeometryPoints.length > 0;\n                }\n                else {\n                    drawName = type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n                }\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n            // convert any html character codes\n            if (drawName && name.search(/&[^&]+;/) > -1) {\n                if (!TEXTAREA) {\n                    TEXTAREA = document.createElement('textarea');\n                }\n                TEXTAREA.innerHTML = name;\n                name = TEXTAREA.value;\n            }\n        }\n        var featureStyle = defaultStyle;\n        if (style) {\n            featureStyle = style;\n        }\n        else if (styleUrl) {\n            featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        }\n        if (drawName) {\n            var nameStyle = createNameStyleFunction(featureStyle[0], name);\n            if (multiGeometryPoints.length > 0) {\n                // in multigeometries restrict the name style to points and create a\n                // style without image or text for geometries requiring fill or stroke\n                // including any polygon specific style if there is one\n                nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n                var baseStyle = new Style({\n                    geometry: featureStyle[0].getGeometry(),\n                    image: null,\n                    fill: featureStyle[0].getFill(),\n                    stroke: featureStyle[0].getStroke(),\n                    text: null\n                });\n                return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n            }\n            return nameStyle;\n        }\n        return featureStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\n        // defined in the same document.  Add a leading `#` if it enables to find\n        // a style.\n        if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n            styleValue = '#' + styleValue;\n        }\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: this.crossOrigin_,\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: src\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n        }),\n        scale: /** @type {number|undefined} */ (object['scale'])\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = /** @type {Fill} */ ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = /** @type {Text} */ ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = /** @type {Stroke} */ ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        // if the polystyle specifies no outline two styles are needed,\n        // one for non-polygon geometries where linestrings require a stroke\n        // and one for polygons where there should be no stroke\n        return [\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        return new GeometryCollection(geometry.getGeometriesArray().filter(function (geometry) {\n                            var type = geometry.getType();\n                            return type !== GeometryType.POLYGON && type !== GeometryType.MULTI_POLYGON;\n                        }));\n                    }\n                    else if (type !== GeometryType.POLYGON && type !== GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                image: imageStyle,\n                stroke: strokeStyle,\n                text: textStyle,\n                zIndex: undefined // FIXME\n            }),\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        return new GeometryCollection(geometry.getGeometriesArray().filter(function (geometry) {\n                            var type = geometry.getType();\n                            return type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON;\n                        }));\n                    }\n                    else if (type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                stroke: null,\n                zIndex: undefined // FIXME\n            })\n        ];\n    }\n    return [new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined // FIXME\n        })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = false;\n    hasTessellate = false;\n    hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name && featureObject.displayName) {\n        featureObject[name] = {\n            value: featureObject.value,\n            displayName: featureObject.displayName,\n            toString: function () {\n                return featureObject.value;\n            }\n        };\n    }\n    else if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north'])\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = (rgba.length == 4) ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY ||\n        layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ ||\n        layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'href'\n], makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n]));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys =\n        ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var /** @type {Object<string, any>} */ properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'scale'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'width'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': Number(style.getWidth()) || 1\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[ /** @type {import(\"../geom/Geometry.js\").default} */(value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries;\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type == GeometryType.GEOMETRY_COLLECTION) {\n        geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_LINE_STRING) {\n        geometries =\n            ( /** @type {MultiLineString} */(geometry)).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POLYGON) {\n        geometries =\n            ( /** @type {MultiPolygon} */(geometry)).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = { 'address': 1, 'description': 1, 'name': 1, 'open': 1,\n        'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1 };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {}).sort().filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var style = Array.isArray(styles) ? styles[0] : styles;\n            if (this.writeStyles_) {\n                properties['Style'] = style;\n            }\n            var textStyle = style.getText();\n            if (textStyle) {\n                properties['name'] = textStyle.getText();\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n});\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n        properties['IconStyle'] = imageStyle;\n    }\n    if (textStyle) {\n        properties['LabelStyle'] = textStyle;\n    }\n    if (strokeStyle) {\n        properties['LineStyle'] = strokeStyle;\n    }\n    if (fillStyle) {\n        properties['PolyStyle'] = fillStyle;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map"]},"metadata":{},"sourceType":"module"}