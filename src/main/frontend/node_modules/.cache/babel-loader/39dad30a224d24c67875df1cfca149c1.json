{"ast":null,"code":"/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = []; // Skip any null or undefined parameter values\n\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&'); // remove any trailing ? or &\n\n  uri = uri.replace(/[?&]$/, ''); // append ? or & depending on whether uri has existing parameters\n\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}","map":{"version":3,"sources":["src/uri.js"],"names":[],"mappings":"AAAA;;;;AAKA;;;;;;;;AAQA,OAAM,SAAU,YAAV,CAAuB,GAAvB,EAA4B,MAA5B,EAAkC;AACtC,MAAM,SAAS,GAAG,EAAlB,CADsC,CAEtC;;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAS,CAAT,EAAU;AACpC,QAAI,MAAM,CAAC,CAAD,CAAN,KAAc,IAAd,IAAsB,MAAM,CAAC,CAAD,CAAN,KAAc,SAAxC,EAAmD;AACjD,MAAA,SAAS,CAAC,IAAV,CAAe,CAAC,GAAG,GAAJ,GAAU,kBAAkB,CAAC,MAAM,CAAC,CAAD,CAAP,CAA3C;AACD;AACF,GAJD;AAKA,MAAM,EAAE,GAAG,SAAS,CAAC,IAAV,CAAe,GAAf,CAAX,CARsC,CAStC;;AACA,EAAA,GAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAN,CAVsC,CAWtC;;AACA,EAAA,GAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAAG,GAAG,GAAhC,GAAsC,GAAG,GAAG,GAAlD;AACA,SAAO,GAAG,GAAG,EAAb;AACD","sourceRoot":"","sourcesContent":["/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map"]},"metadata":{},"sourceType":"module"}