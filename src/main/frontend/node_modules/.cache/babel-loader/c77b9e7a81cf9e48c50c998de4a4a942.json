{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/XMLFeature\n */\n\n\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { isDocument, parse, getXMLSerializer } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\n\nvar XMLFeature =\n/** @class */\nfunction (_super) {\n  __extends(XMLFeature, _super);\n\n  function XMLFeature() {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n\n\n    _this.xmlSerializer_ = getXMLSerializer();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  XMLFeature.prototype.getType = function () {\n    return FormatType.XML;\n  };\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n\n\n  XMLFeature.prototype.readFeature = function (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n      /** @type {Document} */\n      source, opt_options);\n    } else {\n      return this.readFeatureFromNode(\n      /** @type {Node} */\n      source, opt_options);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n\n\n  XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n    var features = this.readFeaturesFromDocument(doc, opt_options);\n\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n\n\n  XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n    return null; // not implemented\n  };\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n\n\n  XMLFeature.prototype.readFeatures = function (source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n      /** @type {Document} */\n      source, opt_options);\n    } else {\n      return this.readFeaturesFromNode(\n      /** @type {Node} */\n      source, opt_options);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this.readFeaturesFromNode(n, opt_options));\n      }\n    }\n\n    return features;\n  };\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n    return abstract();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  XMLFeature.prototype.readGeometry = function (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n      /** @type {Document} */\n      source, opt_options);\n    } else {\n      return this.readGeometryFromNode(\n      /** @type {Node} */\n      source, opt_options);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n\n\n  XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n    return null; // not implemented\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n\n\n  XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n    return null; // not implemented\n  };\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n\n\n  XMLFeature.prototype.readProjection = function (source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(\n      /** @type {Document} */\n      source);\n    } else {\n      return this.readProjectionFromNode(\n      /** @type {Node} */\n      source);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n\n\n  XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n    return this.dataProjection;\n  };\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n\n\n  XMLFeature.prototype.readProjectionFromNode = function (node) {\n    return this.dataProjection;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n    var node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n\n\n  XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n    return null; // not implemented\n  };\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n\n\n  XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n    var node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n\n\n  XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n    return null; // not implemented\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n    var node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n\n\n  XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n    return null; // not implemented\n  };\n\n  return XMLFeature;\n}(FeatureFormat);\n\nexport default XMLFeature;","map":{"version":3,"sources":["../src/format/XMLFeature.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { isDocument, parse, getXMLSerializer } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = getXMLSerializer();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(n, opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Node} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Node} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map"]},"metadata":{},"sourceType":"module"}