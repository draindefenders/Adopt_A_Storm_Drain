{"ast":null,"code":"/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  var dest, destOffset;\n\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n\n  var j = offset;\n\n  while (j < end) {\n    var x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n\n    for (var k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n\n  dest.length = destOffset;\n  return dest;\n}","map":{"version":3,"sources":["../../src/geom/flat/flip.js"],"names":[],"mappings":"AAAA;;;;AAKA;;;;;;;;;AASA,OAAM,SAAU,MAAV,CAAiB,eAAjB,EAAkC,MAAlC,EAA0C,GAA1C,EAA+C,MAA/C,EAAuD,QAAvD,EAAiE,cAAjE,EAA+E;AACnF,MAAI,IAAJ,EAAU,UAAV;;AACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,IAAA,IAAI,GAAG,QAAP;AACA,IAAA,UAAU,GAAG,cAAc,KAAK,SAAnB,GAA+B,cAA/B,GAAgD,CAA7D;AACD,GAHD,MAGO;AACL,IAAA,IAAI,GAAG,EAAP;AACA,IAAA,UAAU,GAAG,CAAb;AACD;;AACD,MAAI,CAAC,GAAG,MAAR;;AACA,SAAO,CAAC,GAAG,GAAX,EAAgB;AACd,QAAM,CAAC,GAAG,eAAe,CAAC,CAAC,EAAF,CAAzB;AACA,IAAA,IAAI,CAAC,UAAU,EAAX,CAAJ,GAAqB,eAAe,CAAC,CAAC,EAAF,CAApC;AACA,IAAA,IAAI,CAAC,UAAU,EAAX,CAAJ,GAAqB,CAArB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,EAAE,CAA9B,EAAiC;AAC/B,MAAA,IAAI,CAAC,UAAU,EAAX,CAAJ,GAAqB,eAAe,CAAC,CAAC,EAAF,CAApC;AACD;AACF;;AACD,EAAA,IAAI,CAAC,MAAL,GAAc,UAAd;AACA,SAAO,IAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @module ol/geom/flat/flip\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n    var dest, destOffset;\n    if (opt_dest !== undefined) {\n        dest = opt_dest;\n        destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n    }\n    else {\n        dest = [];\n        destOffset = 0;\n    }\n    var j = offset;\n    while (j < end) {\n        var x = flatCoordinates[j++];\n        dest[destOffset++] = flatCoordinates[j++];\n        dest[destOffset++] = x;\n        for (var k = 2; k < stride; ++k) {\n            dest[destOffset++] = flatCoordinates[j++];\n        }\n    }\n    dest.length = destOffset;\n    return dest;\n}\n//# sourceMappingURL=flip.js.map"]},"metadata":{},"sourceType":"module"}