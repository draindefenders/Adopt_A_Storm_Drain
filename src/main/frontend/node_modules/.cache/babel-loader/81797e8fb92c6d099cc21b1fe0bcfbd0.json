{"ast":null,"code":"'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n  this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n  this.pos = 0;\n  this.type = 0;\n  this.length = this.buf.length;\n}\n\nPbf.Varint = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\n\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\n\nPbf.Bytes = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\n\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32; // Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\n\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\nPbf.prototype = {\n  destroy: function () {\n    this.buf = null;\n  },\n  // === READING =================================================================\n  readFields: function (readField, result, end) {\n    end = end || this.length;\n\n    while (this.pos < end) {\n      var val = this.readVarint(),\n          tag = val >> 3,\n          startPos = this.pos;\n      this.type = val & 0x7;\n      readField(tag, result, this);\n      if (this.pos === startPos) this.skip(val);\n    }\n\n    return result;\n  },\n  readMessage: function (readField, result) {\n    return this.readFields(readField, result, this.readVarint() + this.pos);\n  },\n  readFixed32: function () {\n    var val = readUInt32(this.buf, this.pos);\n    this.pos += 4;\n    return val;\n  },\n  readSFixed32: function () {\n    var val = readInt32(this.buf, this.pos);\n    this.pos += 4;\n    return val;\n  },\n  // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n  readFixed64: function () {\n    var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n    this.pos += 8;\n    return val;\n  },\n  readSFixed64: function () {\n    var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n    this.pos += 8;\n    return val;\n  },\n  readFloat: function () {\n    var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n    this.pos += 4;\n    return val;\n  },\n  readDouble: function () {\n    var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n    this.pos += 8;\n    return val;\n  },\n  readVarint: function (isSigned) {\n    var buf = this.buf,\n        val,\n        b;\n    b = buf[this.pos++];\n    val = b & 0x7f;\n    if (b < 0x80) return val;\n    b = buf[this.pos++];\n    val |= (b & 0x7f) << 7;\n    if (b < 0x80) return val;\n    b = buf[this.pos++];\n    val |= (b & 0x7f) << 14;\n    if (b < 0x80) return val;\n    b = buf[this.pos++];\n    val |= (b & 0x7f) << 21;\n    if (b < 0x80) return val;\n    b = buf[this.pos];\n    val |= (b & 0x0f) << 28;\n    return readVarintRemainder(val, isSigned, this);\n  },\n  readVarint64: function () {\n    // for compatibility with v2.0.1\n    return this.readVarint(true);\n  },\n  readSVarint: function () {\n    var num = this.readVarint();\n    return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n  },\n  readBoolean: function () {\n    return Boolean(this.readVarint());\n  },\n  readString: function () {\n    var end = this.readVarint() + this.pos;\n    var pos = this.pos;\n    this.pos = end;\n\n    if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n      // longer strings are fast with the built-in browser TextDecoder API\n      return readUtf8TextDecoder(this.buf, pos, end);\n    } // short strings are fast with our custom implementation\n\n\n    return readUtf8(this.buf, pos, end);\n  },\n  readBytes: function () {\n    var end = this.readVarint() + this.pos,\n        buffer = this.buf.subarray(this.pos, end);\n    this.pos = end;\n    return buffer;\n  },\n  // verbose for performance reasons; doesn't affect gzipped size\n  readPackedVarint: function (arr, isSigned) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readVarint(isSigned));\n\n    return arr;\n  },\n  readPackedSVarint: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readSVarint());\n\n    return arr;\n  },\n  readPackedBoolean: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readBoolean());\n\n    return arr;\n  },\n  readPackedFloat: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readFloat());\n\n    return arr;\n  },\n  readPackedDouble: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readDouble());\n\n    return arr;\n  },\n  readPackedFixed32: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readFixed32());\n\n    return arr;\n  },\n  readPackedSFixed32: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readSFixed32());\n\n    return arr;\n  },\n  readPackedFixed64: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readFixed64());\n\n    return arr;\n  },\n  readPackedSFixed64: function (arr) {\n    if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n    var end = readPackedEnd(this);\n    arr = arr || [];\n\n    while (this.pos < end) arr.push(this.readSFixed64());\n\n    return arr;\n  },\n  skip: function (val) {\n    var type = val & 0x7;\n    if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {} else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;else if (type === Pbf.Fixed32) this.pos += 4;else if (type === Pbf.Fixed64) this.pos += 8;else throw new Error('Unimplemented type: ' + type);\n  },\n  // === WRITING =================================================================\n  writeTag: function (tag, type) {\n    this.writeVarint(tag << 3 | type);\n  },\n  realloc: function (min) {\n    var length = this.length || 16;\n\n    while (length < this.pos + min) length *= 2;\n\n    if (length !== this.length) {\n      var buf = new Uint8Array(length);\n      buf.set(this.buf);\n      this.buf = buf;\n      this.length = length;\n    }\n  },\n  finish: function () {\n    this.length = this.pos;\n    this.pos = 0;\n    return this.buf.subarray(0, this.length);\n  },\n  writeFixed32: function (val) {\n    this.realloc(4);\n    writeInt32(this.buf, val, this.pos);\n    this.pos += 4;\n  },\n  writeSFixed32: function (val) {\n    this.realloc(4);\n    writeInt32(this.buf, val, this.pos);\n    this.pos += 4;\n  },\n  writeFixed64: function (val) {\n    this.realloc(8);\n    writeInt32(this.buf, val & -1, this.pos);\n    writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n    this.pos += 8;\n  },\n  writeSFixed64: function (val) {\n    this.realloc(8);\n    writeInt32(this.buf, val & -1, this.pos);\n    writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n    this.pos += 8;\n  },\n  writeVarint: function (val) {\n    val = +val || 0;\n\n    if (val > 0xfffffff || val < 0) {\n      writeBigVarint(val, this);\n      return;\n    }\n\n    this.realloc(4);\n    this.buf[this.pos++] = val & 0x7f | (val > 0x7f ? 0x80 : 0);\n    if (val <= 0x7f) return;\n    this.buf[this.pos++] = (val >>>= 7) & 0x7f | (val > 0x7f ? 0x80 : 0);\n    if (val <= 0x7f) return;\n    this.buf[this.pos++] = (val >>>= 7) & 0x7f | (val > 0x7f ? 0x80 : 0);\n    if (val <= 0x7f) return;\n    this.buf[this.pos++] = val >>> 7 & 0x7f;\n  },\n  writeSVarint: function (val) {\n    this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n  },\n  writeBoolean: function (val) {\n    this.writeVarint(Boolean(val));\n  },\n  writeString: function (str) {\n    str = String(str);\n    this.realloc(str.length * 4);\n    this.pos++; // reserve 1 byte for short string length\n\n    var startPos = this.pos; // write the string directly to the buffer and see how much was written\n\n    this.pos = writeUtf8(this.buf, str, this.pos);\n    var len = this.pos - startPos;\n    if (len >= 0x80) makeRoomForExtraLength(startPos, len, this); // finally, write the message length in the reserved place and restore the position\n\n    this.pos = startPos - 1;\n    this.writeVarint(len);\n    this.pos += len;\n  },\n  writeFloat: function (val) {\n    this.realloc(4);\n    ieee754.write(this.buf, val, this.pos, true, 23, 4);\n    this.pos += 4;\n  },\n  writeDouble: function (val) {\n    this.realloc(8);\n    ieee754.write(this.buf, val, this.pos, true, 52, 8);\n    this.pos += 8;\n  },\n  writeBytes: function (buffer) {\n    var len = buffer.length;\n    this.writeVarint(len);\n    this.realloc(len);\n\n    for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n  },\n  writeRawMessage: function (fn, obj) {\n    this.pos++; // reserve 1 byte for short message length\n    // write the message directly to the buffer and see how much was written\n\n    var startPos = this.pos;\n    fn(obj, this);\n    var len = this.pos - startPos;\n    if (len >= 0x80) makeRoomForExtraLength(startPos, len, this); // finally, write the message length in the reserved place and restore the position\n\n    this.pos = startPos - 1;\n    this.writeVarint(len);\n    this.pos += len;\n  },\n  writeMessage: function (tag, fn, obj) {\n    this.writeTag(tag, Pbf.Bytes);\n    this.writeRawMessage(fn, obj);\n  },\n  writePackedVarint: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n  },\n  writePackedSVarint: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n  },\n  writePackedBoolean: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n  },\n  writePackedFloat: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n  },\n  writePackedDouble: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n  },\n  writePackedFixed32: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n  },\n  writePackedSFixed32: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n  },\n  writePackedFixed64: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n  },\n  writePackedSFixed64: function (tag, arr) {\n    if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n  },\n  writeBytesField: function (tag, buffer) {\n    this.writeTag(tag, Pbf.Bytes);\n    this.writeBytes(buffer);\n  },\n  writeFixed32Field: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed32);\n    this.writeFixed32(val);\n  },\n  writeSFixed32Field: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed32);\n    this.writeSFixed32(val);\n  },\n  writeFixed64Field: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed64);\n    this.writeFixed64(val);\n  },\n  writeSFixed64Field: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed64);\n    this.writeSFixed64(val);\n  },\n  writeVarintField: function (tag, val) {\n    this.writeTag(tag, Pbf.Varint);\n    this.writeVarint(val);\n  },\n  writeSVarintField: function (tag, val) {\n    this.writeTag(tag, Pbf.Varint);\n    this.writeSVarint(val);\n  },\n  writeStringField: function (tag, str) {\n    this.writeTag(tag, Pbf.Bytes);\n    this.writeString(str);\n  },\n  writeFloatField: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed32);\n    this.writeFloat(val);\n  },\n  writeDoubleField: function (tag, val) {\n    this.writeTag(tag, Pbf.Fixed64);\n    this.writeDouble(val);\n  },\n  writeBooleanField: function (tag, val) {\n    this.writeVarintField(tag, Boolean(val));\n  }\n};\n\nfunction readVarintRemainder(l, s, p) {\n  var buf = p.buf,\n      h,\n      b;\n  b = buf[p.pos++];\n  h = (b & 0x70) >> 4;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x7f) << 3;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x7f) << 10;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x7f) << 17;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x7f) << 24;\n  if (b < 0x80) return toNum(l, h, s);\n  b = buf[p.pos++];\n  h |= (b & 0x01) << 31;\n  if (b < 0x80) return toNum(l, h, s);\n  throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n  return pbf.type === Pbf.Bytes ? pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n  if (isSigned) {\n    return high * 0x100000000 + (low >>> 0);\n  }\n\n  return (high >>> 0) * 0x100000000 + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n  var low, high;\n\n  if (val >= 0) {\n    low = val % 0x100000000 | 0;\n    high = val / 0x100000000 | 0;\n  } else {\n    low = ~(-val % 0x100000000);\n    high = ~(-val / 0x100000000);\n\n    if (low ^ 0xffffffff) {\n      low = low + 1 | 0;\n    } else {\n      low = 0;\n      high = high + 1 | 0;\n    }\n  }\n\n  if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n    throw new Error('Given varint doesn\\'t fit into 10 bytes');\n  }\n\n  pbf.realloc(10);\n  writeBigVarintLow(low, high, pbf);\n  writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n  pbf.buf[pbf.pos++] = low & 0x7f | 0x80;\n  low >>>= 7;\n  pbf.buf[pbf.pos++] = low & 0x7f | 0x80;\n  low >>>= 7;\n  pbf.buf[pbf.pos++] = low & 0x7f | 0x80;\n  low >>>= 7;\n  pbf.buf[pbf.pos++] = low & 0x7f | 0x80;\n  low >>>= 7;\n  pbf.buf[pbf.pos] = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n  var lsb = (high & 0x07) << 4;\n  pbf.buf[pbf.pos++] |= lsb | ((high >>>= 3) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f | ((high >>>= 7) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f | ((high >>>= 7) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f | ((high >>>= 7) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f | ((high >>>= 7) ? 0x80 : 0);\n  if (!high) return;\n  pbf.buf[pbf.pos++] = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n  var extraLen = len <= 0x3fff ? 1 : len <= 0x1fffff ? 2 : len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7)); // if 1 byte isn't enough for encoding message length, shift the data to the right\n\n  pbf.realloc(extraLen);\n\n  for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n\nfunction writePackedSVarint(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n\nfunction writePackedFloat(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n\nfunction writePackedDouble(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n\nfunction writePackedBoolean(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n\nfunction writePackedFixed32(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n\nfunction writePackedSFixed32(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n\nfunction writePackedFixed64(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n\nfunction writePackedSFixed64(arr, pbf) {\n  for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n} // Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n\nfunction readUInt32(buf, pos) {\n  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16) + buf[pos + 3] * 0x1000000;\n}\n\nfunction writeInt32(buf, val, pos) {\n  buf[pos] = val;\n  buf[pos + 1] = val >>> 8;\n  buf[pos + 2] = val >>> 16;\n  buf[pos + 3] = val >>> 24;\n}\n\nfunction readInt32(buf, pos) {\n  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16) + (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n  var str = '';\n  var i = pos;\n\n  while (i < end) {\n    var b0 = buf[i];\n    var c = null; // codepoint\n\n    var bytesPerSequence = b0 > 0xEF ? 4 : b0 > 0xDF ? 3 : b0 > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence > end) break;\n    var b1, b2, b3;\n\n    if (bytesPerSequence === 1) {\n      if (b0 < 0x80) {\n        c = b0;\n      }\n    } else if (bytesPerSequence === 2) {\n      b1 = buf[i + 1];\n\n      if ((b1 & 0xC0) === 0x80) {\n        c = (b0 & 0x1F) << 0x6 | b1 & 0x3F;\n\n        if (c <= 0x7F) {\n          c = null;\n        }\n      }\n    } else if (bytesPerSequence === 3) {\n      b1 = buf[i + 1];\n      b2 = buf[i + 2];\n\n      if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n        c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | b2 & 0x3F;\n\n        if (c <= 0x7FF || c >= 0xD800 && c <= 0xDFFF) {\n          c = null;\n        }\n      }\n    } else if (bytesPerSequence === 4) {\n      b1 = buf[i + 1];\n      b2 = buf[i + 2];\n      b3 = buf[i + 3];\n\n      if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n        c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | b3 & 0x3F;\n\n        if (c <= 0xFFFF || c >= 0x110000) {\n          c = null;\n        }\n      }\n    }\n\n    if (c === null) {\n      c = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (c > 0xFFFF) {\n      c -= 0x10000;\n      str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n      c = 0xDC00 | c & 0x3FF;\n    }\n\n    str += String.fromCharCode(c);\n    i += bytesPerSequence;\n  }\n\n  return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n  return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n  for (var i = 0, c, lead; i < str.length; i++) {\n    c = str.charCodeAt(i); // code point\n\n    if (c > 0xD7FF && c < 0xE000) {\n      if (lead) {\n        if (c < 0xDC00) {\n          buf[pos++] = 0xEF;\n          buf[pos++] = 0xBF;\n          buf[pos++] = 0xBD;\n          lead = c;\n          continue;\n        } else {\n          c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n          lead = null;\n        }\n      } else {\n        if (c > 0xDBFF || i + 1 === str.length) {\n          buf[pos++] = 0xEF;\n          buf[pos++] = 0xBF;\n          buf[pos++] = 0xBD;\n        } else {\n          lead = c;\n        }\n\n        continue;\n      }\n    } else if (lead) {\n      buf[pos++] = 0xEF;\n      buf[pos++] = 0xBF;\n      buf[pos++] = 0xBD;\n      lead = null;\n    }\n\n    if (c < 0x80) {\n      buf[pos++] = c;\n    } else {\n      if (c < 0x800) {\n        buf[pos++] = c >> 0x6 | 0xC0;\n      } else {\n        if (c < 0x10000) {\n          buf[pos++] = c >> 0xC | 0xE0;\n        } else {\n          buf[pos++] = c >> 0x12 | 0xF0;\n          buf[pos++] = c >> 0xC & 0x3F | 0x80;\n        }\n\n        buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n      }\n\n      buf[pos++] = c & 0x3F | 0x80;\n    }\n  }\n\n  return pos;\n}","map":{"version":3,"sources":["C:/Users/Tim/IdeaProjects/Adopt_A_Storm_Drain/src/main/java/com/adoptastormdrain/Map/frontend/node_modules/pbf/index.js"],"names":["module","exports","Pbf","ieee754","require","buf","ArrayBuffer","isView","Uint8Array","pos","type","length","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","TEXT_DECODER_MIN_LENGTH","utf8TextDecoder","TextDecoder","prototype","destroy","readFields","readField","result","end","val","readVarint","tag","startPos","skip","readMessage","readFixed32","readUInt32","readSFixed32","readInt32","readFixed64","readSFixed64","readFloat","read","readDouble","isSigned","b","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","readUtf8TextDecoder","readUtf8","readBytes","buffer","subarray","readPackedVarint","arr","push","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","Error","writeTag","writeVarint","realloc","min","set","finish","writeFixed32","writeInt32","writeSFixed32","writeFixed64","Math","floor","writeSFixed64","writeBigVarint","writeSVarint","writeBoolean","writeString","str","String","writeUtf8","len","makeRoomForExtraLength","writeFloat","write","writeDouble","writeBytes","i","writeRawMessage","fn","obj","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","l","s","p","h","toNum","pbf","low","high","writeBigVarintLow","writeBigVarintHigh","lsb","extraLen","log","LN2","b0","c","bytesPerSequence","b1","b2","b3","fromCharCode","decode","lead","charCodeAt"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n"]},"metadata":{},"sourceType":"script"}