{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tim\\\\IdeaProjects\\\\Adopt_A_Storm_Drain\\\\src\\\\main\\\\java\\\\com\\\\adoptastormdrain\\\\Map\\\\frontend\\\\src\\\\components\\\\OLMapFragment.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid'; // Start Openlayers imports\n\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { defaults as defaultInteractions, DragRotateAndZoom } from 'ol/interaction';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM'; // End Openlayers imports\n\nclass OLMapFragment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  updateDimensions() {\n    const h = window.innerWidth >= 992 ? window.innerHeight : 400;\n    this.setState({\n      height: h\n    });\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidMount() {\n    // Create an Openlayer Map instance with two tile layers\n    const map = new Map({\n      //  Display the map in the div with the id of map\n      interactions: defaultInteractions().extend([new DragRotateAndZoom()]),\n      target: 'map',\n      layers: [new TileLayer({\n        source: new XYZSource({\n          url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n          projection: 'EPSG:3857'\n        })\n      })],\n      // Add in the following map controls\n      controls: DefaultControls().extend([new ZoomSlider(), new MousePosition(), new ScaleLine(), new OverviewMap()]),\n      // Render the tile layers in a map view with a Mercator projection\n      view: new View({\n        projection: 'EPSG:3857',\n        center: [0, 0],\n        //center: Projection.fromLonLat([37.41, 8.82]),\n        zoom: 2\n      })\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  render() {\n    const style = {\n      width: '100%',\n      height: this.state.height,\n      backgroundColor: '#cccccc'\n    };\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default OLMapFragment;","map":{"version":3,"sources":["C:/Users/Tim/IdeaProjects/Adopt_A_Storm_Drain/src/main/java/com/adoptastormdrain/Map/frontend/src/components/OLMapFragment.js"],"names":["React","Grid","Map","View","defaults","defaultInteractions","DragRotateAndZoom","TileLayer","OSM","OLMapFragment","Component","constructor","props","updateDimensions","bind","h","window","innerWidth","innerHeight","setState","height","componentWillMount","addEventListener","componentDidMount","map","interactions","extend","target","layers","source","XYZSource","url","projection","controls","DefaultControls","ZoomSlider","MousePosition","ScaleLine","OverviewMap","view","center","zoom","componentWillUnmount","removeEventListener","render","style","width","state","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CAEA;;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,QAAQ,IAAIC,mBAApB,EAAyCC,iBAAzC,QAAiE,gBAAjE;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AACDD,EAAAA,gBAAgB,GAAE;AACd,UAAME,CAAC,GAAGC,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2BD,MAAM,CAACE,WAAlC,GAAgD,GAA1D;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAEL;AAAT,KAAd;AACH;;AACDM,EAAAA,kBAAkB,GAAE;AAChBL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKT,gBAAvC;AACA,SAAKA,gBAAL;AACH;;AACDU,EAAAA,iBAAiB,GAAE;AAEf;AACA,UAAMC,GAAG,GAAG,IAAItB,GAAJ,CAAQ;AAChB;AACAuB,MAAAA,YAAY,EAAEpB,mBAAmB,GAAGqB,MAAtB,CAA6B,CACvC,IAAIpB,iBAAJ,EADuC,CAA7B,CAFE;AAKhBqB,MAAAA,MAAM,EAAE,KALQ;AAMhBC,MAAAA,MAAM,EAAE,CACJ,IAAIrB,SAAJ,CAAc;AACVsB,QAAAA,MAAM,EAAE,IAAIC,SAAJ,CAAc;AAClBC,UAAAA,GAAG,EAAE,sDADa;AAElBC,UAAAA,UAAU,EAAE;AAFM,SAAd;AADE,OAAd,CADI,CANQ;AAchB;AACAC,MAAAA,QAAQ,EAAEC,eAAe,GAAGR,MAAlB,CAAyB,CAC/B,IAAIS,UAAJ,EAD+B,EAE/B,IAAIC,aAAJ,EAF+B,EAG/B,IAAIC,SAAJ,EAH+B,EAI/B,IAAIC,WAAJ,EAJ+B,CAAzB,CAfM;AAqBhB;AACAC,MAAAA,IAAI,EAAE,IAAIpC,IAAJ,CAAS;AACX6B,QAAAA,UAAU,EAAE,WADD;AAEXQ,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAG,CAAH,CAFG;AAGX;AACAC,QAAAA,IAAI,EAAE;AAJK,OAAT;AAtBU,KAAR,CAAZ;AA6BH;;AACDC,EAAAA,oBAAoB,GAAE;AAClB1B,IAAAA,MAAM,CAAC2B,mBAAP,CAA2B,QAA3B,EAAqC,KAAK9B,gBAA1C;AACH;;AACD+B,EAAAA,MAAM,GAAE;AACJ,UAAMC,KAAK,GAAG;AACVC,MAAAA,KAAK,EAAE,MADG;AAEV1B,MAAAA,MAAM,EAAC,KAAK2B,KAAL,CAAW3B,MAFR;AAGV4B,MAAAA,eAAe,EAAE;AAHP,KAAd;AAKA,WACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAEH,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAQH;;AA/DuC;;AAiE5C,eAAepC,aAAf","sourcesContent":["import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// Start Openlayers imports\r\nimport 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport {defaults as defaultInteractions, DragRotateAndZoom} from 'ol/interaction';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\n// End Openlayers imports\r\n\r\nclass OLMapFragment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateDimensions = this.updateDimensions.bind(this)\r\n    }\r\n    updateDimensions(){\r\n        const h = window.innerWidth >= 992 ? window.innerHeight : 400\r\n        this.setState({height: h})\r\n    }\r\n    componentWillMount(){\r\n        window.addEventListener('resize', this.updateDimensions)\r\n        this.updateDimensions()\r\n    }\r\n    componentDidMount(){\r\n\r\n        // Create an Openlayer Map instance with two tile layers\r\n        const map = new Map({\r\n            //  Display the map in the div with the id of map\r\n            interactions: defaultInteractions().extend([\r\n                new DragRotateAndZoom()\r\n            ]),\r\n            target: 'map',\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new XYZSource({\r\n                        url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n                        projection: 'EPSG:3857'\r\n                    })\r\n                })\r\n            ],\r\n            // Add in the following map controls\r\n            controls: DefaultControls().extend([\r\n                new ZoomSlider(),\r\n                new MousePosition(),\r\n                new ScaleLine(),\r\n                new OverviewMap()\r\n            ]),\r\n            // Render the tile layers in a map view with a Mercator projection\r\n            view: new View({\r\n                projection: 'EPSG:3857',\r\n                center: [0,0],\r\n                //center: Projection.fromLonLat([37.41, 8.82]),\r\n                zoom: 2\r\n            })\r\n        })\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this.updateDimensions)\r\n    }\r\n    render(){\r\n        const style = {\r\n            width: '100%',\r\n            height:this.state.height,\r\n            backgroundColor: '#cccccc',\r\n        }\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <div id='map' style={style} >\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nexport default OLMapFragment"]},"metadata":{},"sourceType":"module"}