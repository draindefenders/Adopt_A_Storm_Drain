{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/WMTSCapabilities\n */\n\n\nimport { boundingExtent } from '../extent.js';\nimport OWS from './OWS.js';\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString, readNonNegativeInteger, readDecimal } from './xsd.js';\nimport { pushParseAndPop, makeStructureNS, makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\n\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n/**\n * @const\n * @type {Array<null|string>}\n */\n\nvar OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents)\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\n\nvar WMTSCapabilities =\n/** @class */\nfunction (_super) {\n  __extends(WMTSCapabilities, _super);\n\n  function WMTSCapabilities() {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {OWS}\n     * @private\n     */\n\n\n    _this.owsParser_ = new OWS();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  WMTSCapabilities.prototype.readFromDocument = function (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  WMTSCapabilities.prototype.readFromNode = function (node) {\n    var version = node.getAttribute('version');\n\n    if (version) {\n      version = version.trim();\n    }\n\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  };\n\n  return WMTSCapabilities;\n}(XML);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertyPusher(readStyle),\n  'Format': makeObjectPropertyPusher(readString),\n  'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n  'Dimension': makeObjectPropertyPusher(readDimensions),\n  'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n  'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Default': makeObjectPropertySetter(readString),\n  'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'WellKnownScaleSet': makeObjectPropertySetter(readString),\n  'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'SupportedCRS': makeObjectPropertySetter(readString),\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n  'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n  'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n  'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n  'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\n\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\n\n\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\n\n\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\n\n\nfunction readStyle(node, objectStack) {\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n\n  if (!style) {\n    return undefined;\n  }\n\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\n\n\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\n\n\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\n\n\nfunction readResourceUrl(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n\n  if (format) {\n    resource['format'] = format;\n  }\n\n  if (template) {\n    resource['template'] = template;\n  }\n\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n\n  return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\n\n\nfunction readWgs84BoundingBox(node, objectStack) {\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n\n  return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\n\n\nfunction readLegendUrl(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\n\n\nfunction readCoordinates(node, objectStack) {\n  var coordinates = readString(node).split(/\\s+/);\n\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n\n  return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\n\n\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\n\n\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\n\n\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;","map":{"version":3,"sources":["../src/format/WMTSCapabilities.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMTSCapabilities\n */\nimport { boundingExtent } from '../extent.js';\nimport OWS from './OWS.js';\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString, readNonNegativeInteger, readDecimal } from './xsd.js';\nimport { pushParseAndPop, makeStructureNS, makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wmts/1.0'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/ows/1.1'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /** @class */ (function (_super) {\n    __extends(WMTSCapabilities, _super);\n    function WMTSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {OWS}\n         * @private\n         */\n        _this.owsParser_ = new OWS();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromNode = function (node) {\n        var version = node.getAttribute('version');\n        if (version) {\n            version = version.trim();\n        }\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n        if (!WMTSCapabilityObject) {\n            return null;\n        }\n        WMTSCapabilityObject['version'] = version;\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n    };\n    return WMTSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!style) {\n        return undefined;\n    }\n    var isDefault = node.getAttribute('isDefault') === 'true';\n    style['isDefault'] = isDefault;\n    return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n    var format = node.getAttribute('format');\n    var template = node.getAttribute('template');\n    var resourceType = node.getAttribute('resourceType');\n    var resource = {};\n    if (format) {\n        resource['format'] = format;\n    }\n    if (template) {\n        resource['template'] = template;\n    }\n    if (resourceType) {\n        resource['resourceType'] = resourceType;\n    }\n    return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n    if (coordinates.length != 2) {\n        return undefined;\n    }\n    return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n    var legend = {};\n    legend['format'] = node.getAttribute('format');\n    legend['href'] = readHref(node);\n    return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n    var coordinates = readString(node).split(/\\s+/);\n    if (!coordinates || coordinates.length != 2) {\n        return undefined;\n    }\n    var x = +coordinates[0];\n    var y = +coordinates[1];\n    if (isNaN(x) || isNaN(y)) {\n        return undefined;\n    }\n    return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;\n//# sourceMappingURL=WMTSCapabilities.js.map"]},"metadata":{},"sourceType":"module"}